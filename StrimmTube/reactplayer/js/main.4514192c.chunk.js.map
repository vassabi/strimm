{"version":3,"sources":["components/Player/UI/Duration.tsx","components/Player/UI/styles.ts","components/Player/UI/defaultProps.ts","components/Player/UI/data.ts","components/Player/UI/index.tsx","components/Player/styles.ts","components/Player/data.ts","components/Player/defaultProps.ts","components/Player/index.tsx","global-styles.ts","utils/is-object.ts","utils/deep-equal.ts","App.tsx","reportWebVitals.ts","index.tsx"],"names":["format","seconds","date","Date","hh","getUTCHours","mm","getUTCMinutes","ss","pad","getUTCSeconds","string","slice","Duration","dateTime","Math","round","memo","Wrapper","styled","div","props","isPaused","isActive","Controls","PlayPauseButton","playing","PlayButton","a","Elapsed","span","Timeline","Seek","input","Buffer","Timestamp","Progress","ToggleMute","muted","Volume","VolumeRange","VolumeBar","VolumeCol","em","FullscreenButton","defaultProps","duration","played","loaded","volume","controlsEnabled","onFullscreen","onPlayPause","seekMouseDown","seekChange","seekMouseUp","toggleMute","volumeChange","initVolumeBar","id","volumeBarCoef","length","UI","useState","volumeBar","setVolumeBar","isControlsActive","setIsControlsActive","useEffect","updatedVolumeBar","map","col","index","timer","setTimeout","clearTimeout","onMouseMove","onMouseLeave","onClick","type","min","max","step","value","onMouseDown","onChange","onMouseUp","style","width","screenFullActive","fullscreenFallbackEnabled","initOptionsState","url","pip","controls","light","loop","playbackRate","playsinline","source","startDate","Player","optionsState","setOptionsState","playerState","setPlayerState","setFullscreenFallbackEnabled","wrapperElement","useRef","optionsInitUpdate","updateOptionsState","undefined","localStorageVolume","localStorage","getItem","updatedOptions","parseFloat","newOptions","handleToggleMuted","newLocalStorageVolume","setItem","toString","screenfull","isFullscreen","ref","player","className","height","onReady","onStart","now","dayjs","startTime","seek","diff","seekTo","onPlay","onPause","onBuffer","console","log","onBufferEnd","onSeek","onEnded","onError","e","onProgress","state","seeking","loadedSeconds","playedSeconds","onDuration","current","isEnabled","toggle","target","GlobalStyle","createGlobalStyle","isObject","object","deepEqual","object1","object2","keys1","Object","keys","keys2","key","val1","val2","areObjects","defaultLocalData","App","localData","setLocalData","intervalCounter","setInterval","window","STRIMM_PLAYER","clearInterval","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.4514192c.chunk.js","sourcesContent":["import React, { memo } from 'react';\n\ninterface Props {\n  seconds: number;\n}\n\nfunction format(seconds: number) {\n  const date = new Date(seconds * 1000);\n  const hh = date.getUTCHours();\n  const mm = date.getUTCMinutes();\n  const ss = pad(date.getUTCSeconds());\n  if (hh) {\n    return `${hh}:${pad(mm)}:${ss}`;\n  }\n  return `${mm}:${ss}`;\n}\n\nfunction pad(string: number) {\n  return `0${string}`.slice(-2);\n}\n\nfunction Duration({ seconds }: Props) {\n  return <time dateTime={`P${Math.round(seconds)}S`}>{format(seconds)}</time>;\n}\n\nexport default memo(Duration);\n","import styled from 'styled-components';\nimport {PlayButtonProps, PlayPauseButtonProps, ToggleMuteProps, VolumeColProps, WrapperProps} from \"./types\";\n\nconst Wrapper = styled.div<WrapperProps>`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  background-image: none;\n  text-align: center;\n  cursor: pointer;\n  font-size: 16px;\n  color: #fff;\n\n  ${props => props.isPaused || props.isActive\n      ? `\n    background-image: linear-gradient(to top, rgba(0, 0, 0, 0.25), transparent 15%);\n\n    ${Controls} {\n      opacity: 1;\n    }\n  ` : null};\n`;\n\nconst PlayPauseButton = styled.div<PlayPauseButtonProps>`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 100%;\n  height: 100%;\n  z-index: 1;\n\n  &::before {\n    font-family: flowplayer;\n    position: absolute;\n    top: 50%;\n    left: 50%;\n    transform: translate(-50%, -50%);\n    font-size: 14vw;\n    transition: opacity 0.1s;\n    opacity: 0;\n\n    @media (min-width: 768px) {\n      font-size: 107px;\n    }\n  }\n\n  ${props =>\n    !props.playing\n      ? `\n        &::before {\n          content: '\\\\e007';\n        }\n      `\n      : `\n        &::before {\n          content: '\\\\e008';\n        }\n      `\n    }\n`;\n\nconst Controls = styled.div`\n  position: absolute;\n  bottom: 0;\n  width: 100%;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  height: 3em;\n  z-index: 2;\n  padding-left: 0.3em;\n  padding-right: 2.5em;\n  transition: background-image 0.1s, opacity 0.1s;\n  opacity: 0;\n`;\n\nconst PlayButton = styled.a<PlayButtonProps>`\n  margin: 0 0.5em;\n  flex: 0 0 auto;\n  display: inline-block;\n\n  ${props =>\n    !props.playing\n      ? `\n        &::before {\n        font-family: flowplayer;\n        font-size: 1.7em;\n        content: '\\\\e007';\n      }\n      `\n      : `\n        &::before {\n          font-family: flowplayer;\n          font-size: 1.7em;\n          content: '\\\\e008';\n        }\n       `}\n`;\n\nconst Elapsed = styled.span`\n  margin: 0 0.5em;\n  display: inline-block;\n  flex: 0 0 auto;\n  cursor: default;\n`;\n\nconst Timeline = styled.div`\n  position: relative;\n  margin: 0 0.5em;\n  background-color: rgba(255, 255, 255, 0.5);\n  height: 0.9em;\n  border-radius: 0.24em;\n  flex: 1 1 auto;\n  transition: height 0.2s;\n`;\n\nconst Seek = styled.input`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: transparent;\n\n  &[type='range'] {\n    -webkit-appearance: none;\n    width: 100%;\n    margin: 0;\n  }\n  &[type='range']:focus {\n    outline: none;\n  }\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 15px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    background: rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    border: 0px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']::-webkit-slider-thumb {\n    box-shadow: 0px 0px 0px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    height: 20px;\n    width: 20px;\n    border-radius: 20px;\n    background: rgba(255, 255, 255, 0);\n    cursor: col-resize;\n    -webkit-appearance: none;\n    margin-top: -2.5px;\n  }\n  &[type='range']:focus::-webkit-slider-runnable-track {\n    background: rgba(255, 255, 255, 0);\n  }\n  &[type='range']::-moz-range-track {\n    width: 100%;\n    height: 15px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    background: rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    border: 0px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']::-moz-range-thumb {\n    box-shadow: 0px 0px 0px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    height: 20px;\n    width: 20px;\n    border-radius: 20px;\n    background: rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']::-ms-track {\n    width: 100%;\n    height: 15px;\n    cursor: col-resize;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n  &[type='range']::-ms-fill-lower {\n    background: rgba(242, 242, 242, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n  }\n  &[type='range']::-ms-fill-upper {\n    background: rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n  }\n  &[type='range']::-ms-thumb {\n    box-shadow: 0px 0px 0px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    width: 20px;\n    height: 15px;\n    border-radius: 20px;\n    background: rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']:focus::-ms-fill-lower {\n    background: rgba(255, 255, 255, 0);\n  }\n  &[type='range']:focus::-ms-fill-upper {\n    background: rgba(255, 255, 255, 0);\n  }\n`;\n\nconst Buffer = styled.div`\n  position: absolute;\n  left: 0;\n  height: 100%;\n  max-width: 100%;\n  background-color: rgba(255, 255, 255, 0.6);\n  border-radius: 0.24em;\n  transition: width 0.25s linear;\n`;\n\nconst Timestamp = styled.span`\n  position: absolute;\n  background-color: rgba(0, 0, 0, 0.65);\n  display: none;\n  border-radius: 0.2em;\n  padding: 0.1em 0.3em;\n  font-size: 90%;\n  bottom: 1.4em;\n  height: auto;\n`;\n\nconst Progress = styled.div`\n  position: absolute;\n  height: 100%;\n  max-width: 100%;\n  border-radius: 0.24em;\n  background-color: #00abcd;\n  fill: rgba(0, 0, 0, 0.2);\n  transition: width 0.25s linear;\n`;\n\nconst ToggleMute = styled.a<ToggleMuteProps>`\n  margin: 0 0.5em;\n  display: inline-block;\n  flex: 0 0 auto;\n\n  ${(props) =>\n    !props.muted\n      ? `\n    &::before {\n    font-family: flowplayer;\n    font-size: 1.7em;\n    content: '\\\\e00b';\n  }\n  `\n      : `\n  &::before {\n    font-family: flowplayer;\n    font-size: 1.7em;\n    content: '\\\\e00d';\n  }\n   `}\n`;\n\nconst Volume = styled.div`\n  margin: 0 0.5em;\n  flex: 0 0 auto;\n  position: relative;\n`;\n\nconst VolumeRange = styled.input`\n  position: absolute;\n  z-index: 1;\n  top: 0;\n  left: 0;\n  background-color: transparent;\n\n  &[type='range'] {\n    -webkit-appearance: none;\n    width: 100%;\n    margin: 0;\n  }\n  &[type='range']:focus {\n    outline: none;\n  }\n  &[type='range']::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 15px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    background: rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    border: 0px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']::-webkit-slider-thumb {\n    box-shadow: 0px 0px 0px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    height: 1px;\n    width: 1px;\n    border-radius: 20px;\n    background: rgba(255, 255, 255, 0);\n    cursor: col-resize;\n    -webkit-appearance: none;\n    margin-top: -2.5px;\n  }\n  &[type='range']:focus::-webkit-slider-runnable-track {\n    background: rgba(255, 255, 255, 0);\n  }\n  &[type='range']::-moz-range-track {\n    width: 100%;\n    height: 15px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    background: rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    border: 0px solid rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']::-moz-range-thumb {\n    box-shadow: 0px 0px 0px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    height: 1px;\n    width: 1px;\n    border-radius: 20px;\n    background: rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']::-ms-track {\n    width: 100%;\n    height: 15px;\n    cursor: col-resize;\n    background: transparent;\n    border-color: transparent;\n    color: transparent;\n  }\n  &[type='range']::-ms-fill-lower {\n    background: rgba(242, 242, 242, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n  }\n  &[type='range']::-ms-fill-upper {\n    background: rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    border-radius: 0px;\n    box-shadow: 0px 0px 0.6px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n  }\n  &[type='range']::-ms-thumb {\n    box-shadow: 0px 0px 0px rgba(255, 255, 255, 0),\n      0px 0px 0px rgba(255, 255, 255, 0);\n    border: 0px solid rgba(255, 255, 255, 0);\n    width: 1px;\n    height: 1px;\n    border-radius: 20px;\n    background: rgba(255, 255, 255, 0);\n    cursor: col-resize;\n  }\n  &[type='range']:focus::-ms-fill-lower {\n    background: rgba(255, 255, 255, 0);\n  }\n  &[type='range']:focus::-ms-fill-upper {\n    background: rgba(255, 255, 255, 0);\n  }\n`;\n\nconst VolumeBar = styled.div`\n  flex: 1;\n  position: relative;\n  cursor: col-resize;\n  height: 0.9em;\n  border-radius: 0.24em;\n  background-color: transparent;\n  user-select: none;\n  transition: height 0.2s;\n  white-space: nowrap;\n`;\n\nconst VolumeCol = styled.em<VolumeColProps>`\n  border-radius: 2px;\n  display: inline-block;\n  width: 5px;\n  height: 100%;\n  position: relative;\n  vertical-align: top;\n  transition: transform 0.4s;\n  transform-origin: bottom;\n  user-select: none;\n  transform: scale(1.1);\n  ${(props) =>\n    props.isActive\n      ? `\n    background-color: #00abcd;\n    fill: rgba(0, 0, 0, 0.2);\n    `\n      : `\n    background-color: rgba(255, 255, 255, 0.75);\n    `}\n\n  & + & {\n    margin-left: 3px;\n  }\n\n  &:hover {\n    transform: scaleY(1.35);\n    transition: transform 0.2s;\n  }\n`;\n\nconst FullscreenButton = styled.a`\n  position: absolute;\n  z-index: 1;\n  top: 50%;\n  transform: translateY(-50%);\n  right: 0;\n  padding: 0 0.7em 0 0.3em;\n\n  &::before {\n    font-family: flowplayer;\n    font-size: 1.45em;\n    content: '\\\\e002';\n  }\n`;\n\nexport {\n  Wrapper,\n  FullscreenButton,\n  PlayPauseButton,\n  Controls,\n  PlayButton,\n  Elapsed,\n  Timeline,\n  Seek,\n  Buffer,\n  Timestamp,\n  Progress,\n  ToggleMute,\n  Volume,\n  VolumeRange,\n  VolumeBar,\n  VolumeCol,\n};\n","import { Props } from './types';\n\nconst defaultProps: Props = {\n  duration: 0,\n  played: 0,\n  loaded: 0,\n  volume: 0,\n  playing: false,\n  controlsEnabled: true,\n  muted: false,\n  onFullscreen: () => {},\n  onPlayPause: () => {},\n  seekMouseDown: () => {},\n  seekChange: () => {},\n  seekMouseUp: () => {},\n  toggleMute: () => {},\n  volumeChange: () => {},\n};\n\nexport default defaultProps;\n","import {VolumeBarItemType} from \"./types\";\n\nconst initVolumeBar: Array<VolumeBarItemType> = [\n  {\n    id: 0,\n    isActive: false,\n  },\n  {\n    id: 1,\n    isActive: false,\n  },\n  {\n    id: 2,\n    isActive: false,\n  },\n  {\n    id: 3,\n    isActive: false,\n  },\n  {\n    id: 4,\n    isActive: false,\n  },\n  {\n    id: 5,\n    isActive: false,\n  },\n  {\n    id: 6,\n    isActive: false,\n  },\n];\n\nexport { initVolumeBar };\n","/**\n *\n * UI\n *\n */\n\nimport React, { memo, useEffect, useState } from 'react';\n\nimport Duration from './Duration';\n\nimport {\n  Wrapper,\n  FullscreenButton,\n  PlayPauseButton,\n  Controls,\n  PlayButton,\n  Elapsed,\n  Timeline,\n  Seek,\n  Buffer,\n  Timestamp,\n  Progress,\n  ToggleMute,\n  Volume,\n  VolumeRange,\n  VolumeBar,\n  VolumeCol,\n} from './styles';\nimport defaultProps from \"./defaultProps\";\nimport {Props, VolumeBarItemType} from \"./types\";\nimport {initVolumeBar} from \"./data\";\n\nconst volumeBarCoef = 100 / initVolumeBar.length;\n\nfunction UI({\n  duration,\n  played,\n  loaded,\n  volume,\n  playing,\n  controlsEnabled,\n  muted,\n  onFullscreen,\n  onPlayPause,\n  seekMouseDown,\n  seekChange,\n  seekMouseUp,\n  toggleMute,\n  volumeChange,\n}: Props) {\n  // volume bar state\n  const [volumeBar, setVolumeBar] = useState<Array<VolumeBarItemType>>(initVolumeBar);\n\n  // is controls active\n  const [isControlsActive, setIsControlsActive] = useState<boolean>(true);\n\n  // watch volume - update volume bar\n  useEffect(() => {\n    let updatedVolumeBar = [...volumeBar];\n    updatedVolumeBar = updatedVolumeBar.map((col: VolumeBarItemType, index: number) => ({\n      ...col,\n      isActive: volumeBarCoef * index < volume * 100,\n    }));\n    setVolumeBar(updatedVolumeBar);\n  }, [volume]);\n\n  useEffect(() => {\n    let timer: ReturnType<typeof setTimeout>;\n\n    if (isControlsActive) {\n      timer = setTimeout(() => {\n        setIsControlsActive(false);\n      }, 5000);\n    }\n\n    return () => clearTimeout(timer);\n  }, [isControlsActive]);\n\n  // mouse move handler\n  const mouseMoveHandler = () => {\n    setIsControlsActive(true);\n  };\n\n  // mouse leave handler\n  const mouseLeaveHandler = () => {\n    setIsControlsActive(false);\n  };\n\n  // play\\pause button click handler\n  const playPauseButtonClickHandler = () => {\n    onPlayPause();\n  };\n\n  return (\n    <Wrapper\n      isPaused={!playing}\n      isActive={isControlsActive}\n      onMouseMove={mouseMoveHandler}\n      onMouseLeave={mouseLeaveHandler}\n    >\n      <PlayPauseButton\n        playing={playing}\n        onClick={playPauseButtonClickHandler}\n      />\n\n      <Controls>\n        {controlsEnabled ? (\n          <PlayButton playing={playing} onClick={onPlayPause} />\n        ) : null}\n\n        {controlsEnabled ? (\n          <Elapsed>\n            <Duration seconds={duration * played} />\n          </Elapsed>\n        ) : null}\n\n        {controlsEnabled ? (\n          <Timeline>\n            <Seek\n              type=\"range\"\n              min={0}\n              max={1}\n              step=\"any\"\n              value={played}\n              onMouseDown={seekMouseDown}\n              onChange={seekChange}\n              onMouseUp={seekMouseUp}\n            />\n            <Buffer style={{ width: `${loaded * 100}%` }} />\n            <Timestamp />\n            <Progress style={{ width: `${played * 100}%` }} />\n          </Timeline>\n        ) : null}\n\n        <ToggleMute muted={muted} onClick={toggleMute} />\n\n        <Volume>\n          <VolumeRange\n            type=\"range\"\n            min={0}\n            max={1}\n            step=\"any\"\n            value={volume}\n            onChange={volumeChange}\n          />\n          <VolumeBar>\n            {volumeBar &&\n              volumeBar.map(col => (\n                <VolumeCol key={col.id} isActive={col.isActive} />\n              ))}\n          </VolumeBar>\n        </Volume>\n        <FullscreenButton\n          onClick={() => {\n            // screenfull.request(wrapperElement.current);\n            onFullscreen();\n          }}\n        />\n      </Controls>\n    </Wrapper>\n  );\n}\n\nUI.defaultProps = defaultProps;\n\nexport default memo(UI);\n","import styled from 'styled-components';\n\ninterface WrapperProps {\n  readonly screenFullActive: boolean;\n  readonly fullscreenFallbackEnabled: boolean;\n}\n\nconst Wrapper = styled.div<WrapperProps>`\n  position: relative;\n  background-color: black;\n  padding-bottom: ${`${(9 / 16) * 100}%`};\n\n  ${(props) => props.screenFullActive ? `\n    position: static;\n    padding-bottom: 0;\n  ` : null}\n\n  ${(props) =>\n    props.fullscreenFallbackEnabled\n      ? `\n    position: fixed;\n    padding-bottom: 0;\n    top: 0%;\n    left: 0;\n    width: 100vw;\n    height: 100vh;\n    z-index: 13;\n    background-color: black;\n  `\n      : null}\n\n  & > .react-player {\n    position: absolute;\n    z-index: 0;\n    top: 0;\n    left: 0;\n  }\n`;\n\n\nexport { Wrapper };\n","import {ReactPlayerProps} from \"react-player\";\n\nconst initOptionsState: ReactPlayerProps = {\n  url: '',\n  pip: true,\n  playing: true,\n  controls: false,\n  light: false,\n  volume: 0,\n  muted: true,\n  played: 0,\n  loaded: 0,\n  loop: false,\n  duration: 0,\n  playbackRate: 1.0,\n  playsinline: true,\n};\n\nexport { initOptionsState };\n","import { Props } from './types';\n\nconst defaultProps: Props = {\n  source: null,\n  startDate: null\n};\n\nexport default defaultProps;\n","/**\n *\n * Player\n */\n\nimport React, {ChangeEvent, useEffect, useRef, useState} from 'react';\nimport ReactPlayer, { ReactPlayerProps } from 'react-player';\n\n// 3d parties\nimport dayjs from 'dayjs'\nimport screenfull from 'screenfull';\n\n// components\nimport UI from './UI';\n\n// styles\nimport { Wrapper } from './styles';\nimport './UI/icons/style.css';\n\n// data, types, props, default\nimport {initOptionsState} from \"./data\";\nimport {OnProgressType, Props} from \"./types\";\nimport defaultProps from \"./defaultProps\";\n\nfunction Player({\n  source,\n  startDate,\n}: Props) {\n  // options state\n  const [optionsState, setOptionsState] = useState<ReactPlayerProps>(initOptionsState);\n\n  // player state\n  const [playerState, setPlayerState] = useState<ReactPlayer>();\n\n  // fullscreenFallbackEnabled enabled state\n  const [fullscreenFallbackEnabled, setFullscreenFallbackEnabled] = useState<boolean>(\n    false,\n  );\n\n  // wrapper ref\n  const wrapperElement = useRef<HTMLInputElement>(null);\n\n  // init\n  useEffect(() => {\n    if (playerState) {\n      optionsInitUpdate();\n    }\n  }, [playerState]);\n\n  // watch source - update url\n  useEffect(() => {\n      updateOptionsState({\n        url: source && source.length > 0 ? source : undefined\n      });\n  }, [source]);\n\n  // options init update\n  const optionsInitUpdate = () => {\n    const localStorageVolume = localStorage.getItem('volume');\n\n    const updatedOptions = {\n      ...optionsState,\n      volume: localStorageVolume !== null && parseFloat(localStorageVolume) !== 0\n        ? parseFloat(localStorageVolume)\n        : 0.7\n    };\n\n    // console.log('updated options: ', updatedOptions);\n\n    setOptionsState(updatedOptions);\n  };\n\n  // update options state\n  const updateOptionsState = (newOptions: ReactPlayerProps) => {\n    const updatedOptions = {\n      ...optionsState,\n      ...newOptions,\n    };\n    setOptionsState(updatedOptions);\n\n    // console.log('updated options: ', updatedOptions);\n  };\n\n  // handle ready\n  const handleReady = () => {\n    // console.log('onReady');\n  };\n\n  // handle start\n  const handleStart = () => {\n    // console.log('onStart');\n\n    if (startDate && playerState) {\n      const now = dayjs();\n      const startTime = dayjs(startDate);\n      const seek = now.diff(startTime, 'seconds');\n\n      playerState.seekTo(seek, 'seconds');\n    }\n  };\n\n  // handle play pause\n  const handlePlayPause = () => {\n    // console.log('play pause: ', optionsState.playing);\n\n    updateOptionsState({\n      playing: !optionsState.playing,\n    });\n  };\n\n  // handle volume change\n  const handleVolumeChange = (e: ChangeEvent<HTMLInputElement>) => {\n    const value = parseFloat(e.target.value);\n    localStorage.setItem('volume', e.target.value);\n\n    // console.log('volume change: ', value);\n\n    updateOptionsState({\n      muted: !value,\n      volume: value,\n    });\n  };\n\n  // handle toggle muted\n  const handleToggleMuted = () => {\n    const localStorageVolume = localStorage.getItem('volume');\n    const newLocalStorageVolume = localStorageVolume !== null && parseFloat(localStorageVolume) !== 0\n      ? parseFloat(localStorageVolume)\n      : 0.7;\n\n    localStorage.setItem('volume', newLocalStorageVolume.toString());\n\n    // console.log('toggle muted: ', newLocalStorageVolume);\n\n    updateOptionsState({\n      muted: !optionsState.muted,\n      volume: !optionsState.muted ? 0 : newLocalStorageVolume,\n    });\n  };\n\n  // handle play\n  const handlePlay = () => {\n    // console.log('onPlay');\n\n    updateOptionsState({\n      playing: true,\n    });\n  };\n\n  // handle seek\n  const handleSeek = () => {\n    // console.log('onSeek');\n  };\n\n  // handle pause\n  const handlePause = () => {\n    // console.log('onPause');\n\n    updateOptionsState({\n      playing: false,\n    });\n  };\n\n  // handle seek mouse down\n  const handleSeekMouseDown = () => {\n    updateOptionsState({\n      seeking: true,\n    });\n  };\n\n  // handle seek change\n  const handleSeekChange = (e: ChangeEvent<HTMLInputElement>) => {\n    updateOptionsState({\n      played: parseFloat(e.target.value),\n    });\n  };\n\n  // handle seek mouse up\n  const handleSeekMouseUp = (e: React.MouseEvent<HTMLInputElement>) => {\n    const target = e.target as HTMLInputElement;\n\n    updateOptionsState({\n      seeking: false,\n    });\n    playerState && playerState.seekTo(parseFloat(target.value));\n  };\n\n  // handle progress\n  const handleProgress = (state: OnProgressType) => {\n    const internalPlayerOptions: ReactPlayerProps = {};\n\n    // We only want to update time slider if we are not currently seeking\n    if (!optionsState.seeking) {\n      updateOptionsState({\n        loaded: state.loaded,\n        loadedSeconds: state.loadedSeconds,\n        played: state.played,\n        playedSeconds: state.playedSeconds,\n        ...internalPlayerOptions,\n      });\n    }\n  };\n\n  // handle ended\n  const handleEnded = () => {\n    // console.log('onEnded');\n\n    // setEndedState(true);\n  };\n\n  // handle duration\n  const handleDuration = (duration: number) => {\n    // console.log('onDuration', duration);\n\n    updateOptionsState({\n      duration,\n    });\n  };\n\n  // unmute click handler\n  const unmuteClickHandler = () => {\n    // console.log('unmute click handler');\n\n    handleToggleMuted();\n  };\n\n  // handle click fullscreen\n  const handleClickFullscreen = () => {\n    if (wrapperElement && wrapperElement.current) {\n      if (screenfull.isEnabled) {\n        screenfull.toggle(wrapperElement.current);\n      } else {\n        setFullscreenFallbackEnabled(!fullscreenFallbackEnabled);\n      }\n    }\n  };\n\n  const ref = (player: ReactPlayer) => {\n    setPlayerState(player);\n  };\n\n  return (\n    <Wrapper\n      screenFullActive={'isFullscreen' in screenfull && screenfull.isFullscreen}\n      fullscreenFallbackEnabled={fullscreenFallbackEnabled}\n      ref={wrapperElement}\n    >\n      <ReactPlayer\n        ref={ref}\n        className=\"react-player\"\n        width=\"100%\"\n        height=\"100%\"\n        onReady={handleReady}\n        onStart={handleStart}\n        onPlay={handlePlay}\n        onPause={handlePause}\n        onBuffer={() => console.log('onBuffer')}\n        onBufferEnd={() => console.log('onBufferEnd')}\n        onSeek={handleSeek}\n        onEnded={handleEnded}\n        onError={(e) => console.log('onError', e)}\n        onProgress={handleProgress}\n        onDuration={handleDuration}\n        {...optionsState}\n      />\n\n      {!optionsState.controls ? (\n        <UI\n          duration={optionsState.duration}\n          playing={optionsState.playing}\n          played={optionsState.played}\n          loaded={optionsState.loaded}\n          muted={optionsState.muted}\n          volume={optionsState.volume}\n          onFullscreen={handleClickFullscreen}\n          onPlayPause={handlePlayPause}\n          seekMouseDown={handleSeekMouseDown}\n          seekChange={handleSeekChange}\n          seekMouseUp={handleSeekMouseUp}\n          toggleMute={handleToggleMuted}\n          volumeChange={handleVolumeChange}\n        />\n      ) : null}\n    </Wrapper>\n  );\n}\n\nPlayer.defaultProps = defaultProps;\n\nexport default Player;\n","import { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  #STRIMM_PLAYER_ROOT {\n    font-family: Roboto-Regular, 'Helvetica Neue', Helvetica, Arial, sans-serif;\n\t  -webkit-overflow-scrolling: touch;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n    box-sizing: border-box;\n    \n    & *, & *::before, & *::after {\n      box-sizing: border-box;\n    }\n  }\n`;\n\nexport default GlobalStyle;\n","function isObject(object: object) {\n  return object != null && typeof object === 'object';\n}\n\nexport default isObject;\n","import isObject from './is-object';\n\nfunction deepEqual(object1: object | null, object2: object | null) {\n  if (!object1 || !object2) return false;\n\n  const keys1 = Object.keys(object1);\n  const keys2 = Object.keys(object2);\n\n  if (keys1.length !== keys2.length) {\n    return false;\n  }\n\n  for (const key of keys1) {\n    // @ts-ignore\n    const val1 = object1[key];\n    // @ts-ignore\n    const val2 = object2[key];\n    const areObjects = isObject(val1) && isObject(val2);\n    if (\n      (areObjects && !deepEqual(val1, val2)) ||\n      (!areObjects && val1 !== val2)\n    ) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\nexport default deepEqual;\n","import React, {memo, useEffect, useState} from 'react';\n\n// components\nimport Player from \"./components/Player\";\n\n// styles\nimport GlobalStyle from \"./global-styles\";\nimport deepEqual from \"./utils/deep-equal\";\n\n// types\ndeclare global {\n  interface Window {\n    STRIMM_PLAYER: {\n      url: string;\n      startDate: string;\n    };\n  }\n}\n\ninterface PlayerData {\n  url: string | null;\n  startDate: string | null;\n}\n\nconst defaultLocalData: PlayerData = {\n  url: null,\n  startDate: null,\n}\n\n// entry\nfunction App() {\n  const [localData, setLocalData] = useState<PlayerData>(defaultLocalData);\n\n  // on mount\n  useEffect(() => {\n    const intervalCounter = setInterval(() => {\n      if ('STRIMM_PLAYER' in window && 'url' in window.STRIMM_PLAYER && 'startDate' in window.STRIMM_PLAYER\n        && !deepEqual(localData, window.STRIMM_PLAYER)) {\n        setLocalData(window.STRIMM_PLAYER);\n      }\n    }, 1000);\n\n    return () => {\n      clearInterval(intervalCounter)\n    };\n  }, [localData]);\n\n  return (\n    <>\n      <Player\n        source={localData.url}\n        startDate={localData.startDate}\n      />\n\n      <GlobalStyle />\n    </>\n  );\n}\n\nexport default memo(App);\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('STRIMM_PLAYER_ROOT')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}